---
import LinkInline from "./LinkInline.astro";

interface Props {
  title: string;
  company: string;
  description: string;
  link?: string;
  date: string;
  status: string;
  index?: number;
  isLast?: boolean;
}

const { title, company, description, link, date, status, index = 0, isLast = false } =
  Astro.props as Props;

// 🎨 Warna badge berdasarkan status
const statusColors = {
  Freelance: "bg-gradient-to-r from-[#C4B073]/30 to-[#A03133]/30 text-[#A03133] dark:text-[#C4B073]",
  Internship: "bg-[#C4B073]/20 text-[#C4B073]",
  Ongoing: "bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300",
  Project: "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300",
};

const badgeClass =
  statusColors[status] ||
  "bg-gray-100 text-gray-800 dark:bg-gray-800/40 dark:text-gray-200";
---

<div
  class={`timeline-item relative mx-5 sm:mx-8 pb-12 grid opacity-0 translate-y-6 transition-all duration-700 ease-out
  before:absolute before:left-[-22px] before:top-0 before:block 
  before:w-[2px] before:bg-[#C4B073]/40 dark:before:bg-[#C4B073]/20 before:content-['']
  md:grid-cols-5 md:gap-10
  ${index % 2 === 0 ? "slide-left" : "slide-right"}
  ${isLast ? "before:h-[1.5rem]" : "before:h-full"}`}
>
  <!-- Kiri: Judul & Info -->
  <div class="relative pb-8 md:col-span-2">
    <div class="sticky top-0">
      <span
        class="absolute -left-[26px] top-1 z-10 rounded-full w-3.5 h-3.5 bg-[#C4B073] shadow-[0_0_6px_rgba(196,176,115,0.6)]"
      ></span>

      <h3 class="text-xl sm:text-2xl font-bold text-[#C4B073]">{title}</h3>
      <h4 class="font-semibold text-base sm:text-lg text-gray-700 dark:text-gray-200">{company}</h4>

      <!-- Status -->
      <span
        class={`inline-block mt-1 px-3 py-0.5 text-xs font-medium rounded-full shadow-sm ${badgeClass}`}
      >
        {status}
      </span>

      <time class="block mt-1 text-xs sm:text-sm text-gray-500 dark:text-gray-400">{date}</time>
    </div>
  </div>

  <!-- Kanan: Deskripsi -->
  <div
    class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3 leading-relaxed text-sm sm:text-base"
  >
    {description}
    {link && <LinkInline href={link} />}
  </div>
</div>

<style is:global>
  /* 🔹 Garis Timeline */
  .timeline-item::before {
    content: "";
    position: absolute;
    left: -22px;
    top: 0;
    width: 2px;
    background-color: #C4B073;
    opacity: 0.4;
  }

  /* 🎞️ Animasi Scroll */
  @keyframes fadeSlideLeft {
    from { opacity: 0; transform: translate(-40px, 20px); }
    to { opacity: 1; transform: translate(0, 0); }
  }
  @keyframes fadeSlideRight {
    from { opacity: 0; transform: translate(40px, 20px); }
    to { opacity: 1; transform: translate(0, 0); }
  }

  .timeline-item.show.slide-left { animation: fadeSlideLeft 0.9s ease-out forwards; }
  .timeline-item.show.slide-right { animation: fadeSlideRight 0.9s ease-out forwards; }

  /* 🌙 Tema SeventeenEight */
  html.seventeen-eight .timeline-item::before { background-color: #00007260 !important; }
  html.seventeen-eight span.w-3\.5 { background-color: #000072 !important; }
  html.seventeen-eight h3 { color: #000072 !important; }
  html.seventeen-eight h4,
  html.seventeen-eight time,
  html.seventeen-eight .relative.flex { color: #1b602f !important; }
</style>

<script>
  if (typeof window !== "undefined") {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, i) => {
          if (entry.isIntersecting) {
            entry.target.style.animationDelay = `${i * 0.15}s`;
            entry.target.classList.add("show");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.15 }
    );

    document.querySelectorAll(".timeline-item").forEach((el) => observer.observe(el));
  }
</script>
