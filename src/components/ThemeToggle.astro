---
import SunIcon from "./icons/Sun.astro";
import MoonIcon from "./icons/Moon.astro";
import SystemIcon from "./icons/System.astro";

const THEMES = ["Light", "Dark", "System"];
---

<div class="relative mx-1">
  <!-- ðŸŒ— Tombol toggle -->
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex items-center justify-center
           hover:scale-110 active:scale-95 transition-transform duration-300"
    aria-label="Ganti tema"
  >
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
    <SystemIcon id="system" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>

  <!-- ðŸŽ¨ Dropdown pilihan tema -->
  <div
    id="themes-menu"
    class="absolute hidden top-8 right-0 text-sm p-1 min-w-[8rem]
           rounded-xl border border-gray-200 dark:border-gray-700/40
           bg-white/80 dark:bg-gray-900/90 backdrop-blur-md
           shadow-lg transition-all duration-200 z-50"
  >
    <ul class="flex flex-col">
      {
        THEMES.map((theme) => (
          <li
            class="themes-menu-option px-3 py-2 cursor-pointer select-none rounded-md
                   hover:bg-yellow-100 dark:hover:bg-gray-700
                   text-gray-700 dark:text-gray-200 transition-colors"
          >
            {theme}
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  /* âœ¨ Efek animasi dropdown */
  #themes-menu.open {
    display: block;
    animation: fade-scale-in 0.2s ease forwards;
  }

  @keyframes fade-scale-in {
    from {
      opacity: 0;
      transform: scale(0.9) translateY(-4px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  .themes-menu-option.active {
    background-color: rgba(196, 176, 115, 0.25);
    font-weight: 600;
    color: #c4b073;
  }

  html.dark .themes-menu-option.active {
    background-color: rgba(196, 176, 115, 0.2);
    color: #f2e7b6;
  }
</style>

<script is:inline>
  const THEMES = ["light", "dark", "system"];
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  const themesMenu = document.getElementById("themes-menu");
  const toggleBtn = document.getElementById("theme-toggle-btn");

  const getThemePreference = () =>
    localStorage.getItem("theme") ?? "system";

  const updateIcon = (theme) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((el) => {
      el.style.scale = el.id === theme ? "1" : "0";
      el.style.opacity = el.id === theme ? "1" : "0";
    });
  };

  const applyTheme = (theme) => {
    const isDark =
      theme === "dark" ||
      (theme === "system" && matchMedia.matches);
    document.documentElement.classList.toggle("dark", isDark);
    updateIcon(theme);
  };

  const updateTheme = () => {
    const theme = getThemePreference();
    applyTheme(theme);
    document.querySelectorAll(".themes-menu-option").forEach((li) => {
      li.classList.toggle("active", li.textContent.trim().toLowerCase() === theme);
    });
  };

  updateTheme();

  toggleBtn.addEventListener("click", (e) => {
    e.stopPropagation();
    themesMenu.classList.toggle("open");
  });

  document.addEventListener("click", () => themesMenu.classList.remove("open"));

  document.querySelectorAll(".themes-menu-option").forEach((el) => {
    el.addEventListener("click", (e) => {
      const chosen = e.target.textContent.trim().toLowerCase();
      localStorage.setItem("theme", chosen);
      updateTheme();
      themesMenu.classList.remove("open");
    });
  });

  matchMedia.addEventListener("change", updateTheme);
  document.addEventListener("astro:after-swap", updateTheme);
</script>
